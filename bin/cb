#!/usr/bin/env sh

# Forked from: https://github.com/niedzielski/cb

is_exec() {
  # Return if this file was executed or sourced
  # TODO: This is not the best way, check 'https://stackoverflow.com/a/28776166'
  #
  # The script's name '$0' assumes different values if the current file is being:
  #  1) sourced  ('source my_path/cb', '. my_path/cb')    --> $0 = is_exec
  #  2) executed ('./my_path/cb')                         --> $0 = ./my_path/cb
  #  3) executed if 'my_path' is in PATH ('./my_path/cb') --> $0 = /home/.../cb

  # TODO: return condition in sh?
  case "$0" in 
    *"/cb") return 0 ;;
    *) return 1 ;;
  esac;
}

# Sourced script should not set options since the parent shell will inherit them.
# E.g., option '-e' will close the shell for any non-zero status code returned
# by any command executed from now on
if is_exec; then
  set -eu; 
fi

case "${OSTYPE:-}$(uname)" in
 [lL]inux*) ;;
 [dD]arwin*) mac_os=1 ;;
  [cC]ygwin) win_os=1 ;;
          *) echo "Unknown operating system \"${OSTYPE:-}$(uname)\"." >&2; false ;;
esac

is_wayland() { [ "$XDG_SESSION_TYPE" = 'wayland' ]; }
is_mac() { [ ${mac_os-0} -ne 0 ]; }
is_win() { [ ${win_os-0} -ne 0 ]; }

# TODO: Instead of checking OS maybe is better to do a "command -v" and just 
# check if one of these commands is available. e.g. xclip is available for wayland
if is_mac; then
  alias cbcopy=pbcopy
  alias cbpaste=pbpaste
elif is_win; then
  alias cbcopy=putclip
  alias cbpaste=getclip
else
  if is_wayland; then
    alias cbcopy=wl-copy
    alias cbpaste='wl-paste --no-newline'
  else
    alias cbcopy='xclip -selection clipboard'
    alias cbpaste='xclip -selection clipboard -out'
  fi
fi

cb() {
  if [ -t 0 ]; then
    # stdin is connected to a terminal.
    cbpaste "$@"
  else
    cbcopy "$@"
  fi
}

if is_exec; then 
  cb "$@";
fi

